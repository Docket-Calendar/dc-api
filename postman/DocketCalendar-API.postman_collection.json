{
	"info": {
		"_postman_id": "c5f3e3a1-d5b2-4e7a-9ed2-b2c5b2c5b2c5",
		"name": "DocketCalendar API",
		"description": "A collection for testing the DocketCalendar API endpoints",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Register User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test User\",\n    \"email\": \"test@example.com\",\n    \"password\": \"test1234\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/auth/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"register"
							]
						},
						"description": "Register a new user"
					},
					"response": []
				},
				{
					"name": "Login User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"admin@example.com\",\n    \"password\": \"admin123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						},
						"description": "Login a user"
					},
					"response": []
				},
				{
					"name": "Get Current User",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/auth/me",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"me"
							]
						},
						"description": "Get the current user profile"
					},
					"response": []
				}
			],
			"description": "Authentication related endpoints"
		},
		{
			"name": "Cases",
			"item": [
				{
					"name": "Get All Cases",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/cases?page=1&limit=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"cases"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						},
						"description": "Get all cases with pagination"
					},
					"response": []
				},
				{
					"name": "Get Case By ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/cases/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"cases",
								"1"
							]
						},
						"description": "Get a specific case by ID"
					},
					"response": []
				},
				{
					"name": "Search Cases",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/cases/search?caseName=Smith&jurisdiction=New York&page=1&limit=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"cases",
								"search"
							],
							"query": [
								{
									"key": "caseName",
									"value": "Smith"
								},
								{
									"key": "jurisdiction",
									"value": "New York"
								},
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						},
						"description": "Search cases by various parameters"
					},
					"response": []
				}
			],
			"description": "Case-related endpoints"
		},
		{
			"name": "Events",
			"item": [
				{
					"name": "Get All Events",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/events?page=1&limit=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"events"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						},
						"description": "Get all events with pagination"
					},
					"response": []
				},
				{
					"name": "Get Event By ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/events/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"events",
								"1"
							]
						},
						"description": "Get a specific event by ID"
					},
					"response": []
				},
				{
					"name": "Get Events By Case ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/events/case/1?page=1&limit=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"events",
								"case",
								"1"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						},
						"description": "Get all events for a specific case"
					},
					"response": []
				},
				{
					"name": "Search Events",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/events/search?casename=Smith&eventType=Deadline&fromDate=2023-01-01&toDate=2023-12-31&page=1&limit=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"events",
								"search"
							],
							"query": [
								{
									"key": "casename",
									"value": "Smith"
								},
								{
									"key": "eventType",
									"value": "Deadline"
								},
								{
									"key": "fromDate",
									"value": "2023-01-01"
								},
								{
									"key": "toDate",
									"value": "2023-12-31"
								},
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						},
						"description": "Search events by various parameters"
					},
					"response": []
				}
			],
			"description": "Event-related endpoints"
		},
		{
			"name": "Health Check",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/health",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"health"
					]
				},
				"description": "Check if the API is running"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Automatically save the auth token when logging in",
					"if (pm.request.url.toString().includes('/auth/login') && pm.response.code === 200) {",
					"    var jsonData = pm.response.json();",
					"    if (jsonData.success && jsonData.data && jsonData.data.token) {",
					"        pm.environment.set('authToken', jsonData.data.token);",
					"        console.log('Auth token saved to environment variable');",
					"    }",
					"}"
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000",
			"type": "string"
		},
		{
			"key": "authToken",
			"value": "",
			"type": "string"
		}
	]
} 